# frozen_string_literal: true

require 'pg'
require './lib/booking'
require './lib/property'
require './lib/user'

databases = %w[makersbnb makersbnb_test]

task :setup do
  p 'Creating databases...'

  databases.each do |database|
    connection = PG.connect
    begin
      connection.exec("CREATE DATABASE #{database};")
    rescue StandardError => e
      p "Database #{database} already exists. Skipping creation."
    else
      connection = PG.connect(dbname: database)
      connection.exec(
        "CREATE TABLE users(
          id SERIAL PRIMARY KEY,
          email VARCHAR(60),
          name VARCHAR(60),
          password VARCHAR(140),
          phone_number VARCHAR(50));"
      )
      connection.exec(
        "CREATE TABLE properties(
          id SERIAL PRIMARY KEY,
          location VARCHAR(100),
          price_per_night MONEY,
          host_id INTEGER REFERENCES users (id),
          name VARCHAR(60),
          description VARCHAR(240));"
      )
      connection.exec(
        "CREATE TABLE bookings(
          id SERIAL PRIMARY KEY,
          host_id INTEGER REFERENCES users (id),
          guest_id INTEGER REFERENCES users (id),
          property_id INTEGER REFERENCES properties (id),
          start_date DATE,
          end_date DATE,
          booking_status VARCHAR(60));"
      )
    end
  end
end

task :test_database_setup do
  p 'Cleaning test database...'

  connection = PG.connect(dbname: 'makersbnb_test')
  connection.exec('TRUNCATE users, properties, bookings;')
end

task :drop_databases do
  p 'Dropping databases...'

  connection = PG.connect(dbname: 'postgres')
  databases.each do |database|
    connection.exec("DROP DATABASE IF EXISTS #{database};")
  end
end

task :reset do
  Rake::Task[:drop_databases].execute
  Rake::Task[:setup].execute
end

task :seed do
  Rake::Task[:reset].execute
  p 'Adding test data to development database...'
  DatabaseConnection.setup('makersbnb')

  p 'Adding users'
  host_alex = User.create(name: 'Host Alex', email: 'alex@example.com', password: 'password123')
  host_tom = User.create(name: 'Host Tom', email: 'tom@example.com', password: 'password123')
  host_emm = User.create(name: 'Host Emmanuel', email: 'emmanuel@example.com', password: 'password123')
  guest_bob = User.create(name: 'Guest Bob', email: 'bob@example.com', password: 'password123')
  guest_charlie = User.create(name: 'Guest Charlie', email: 'charlie@example.com', password: 'password123')

  p 'Adding properties'
  property1 = Property.create(
    name: 'Cosy Studio Flat',
    description: 'Studio apartment, modern decor and amazing lighting close to everything London has to offer.',
    location: 'Camden Town',
    price: 65,
    host_id: host_alex.id
  )
  property2 = Property.create(
    name: 'Modern House',
    description: 'Full of life and charm, the modern living area and tranquil garden offers a perfect respite.',
    location: 'Chiswick',
    price: 120,
    host_id: host_alex.id
  )
  property3 = Property.create(
    name: 'Double bedroom with en-suite',
    description: 'A beautiful bright double bedroom with private en-suite shower/WC.',
    location: 'Streatham',
    price: 80,
    host_id: host_tom.id
  )
  property4 = Property.create(
    name: 'Aldgate Cosy Studio Apartment',
    description: 'Ideal city central location for people visiting the city, work or just passing through.',
    location: 'Brick Lane',
    price: 75,
    host_id: host_emm.id
  )
  p 'Adding bookings'
  Booking.create(
    host_id: property1.host_id,
    guest_id: guest_bob.id,
    property_id: property1.id,
    start_date: '2021-10-01',
    end_date: '2021-10-08',
    booking_status: 'pending'
  )
  Booking.create(
    host_id: property1.host_id,
    guest_id: guest_charlie.id,
    property_id: property1.id,
    start_date: '2021-10-09',
    end_date: '2021-10-16',
    booking_status: 'confirmed'
  )
  Booking.create(
    host_id: property2.host_id,
    guest_id: guest_bob.id,
    property_id: property2.id,
    start_date: '2021-11-01',
    end_date: '2021-11-08',
    booking_status: 'pending'
  )
  Booking.create(
    host_id: property2.host_id,
    guest_id: guest_charlie.id,
    property_id: property2.id,
    start_date: '2021-11-09',
    end_date: '2021-11-16',
    booking_status: 'pending'
  )
  Booking.create(
    host_id: property3.host_id,
    guest_id: guest_bob.id,
    property_id: property3.id,
    start_date: '2021-11-01',
    end_date: '2021-11-08',
    booking_status: 'pending'
  )
  p 'Complete'
end
