# frozen_string_literal: true

require 'pg'

databases = %w[makersbnb makersbnb_test]

task :setup do
  p 'Creating databases...'

  databases.each do |database|
    connection = PG.connect
    begin
      connection.exec("CREATE DATABASE #{database};")
    rescue StandardError => e
      p "Database #{database} already exists. Skipping creation."
    else
      connection = PG.connect(dbname: database)
      connection.exec(
        "CREATE TABLE users(
          id SERIAL PRIMARY KEY,
          email VARCHAR(60),
          name VARCHAR(60),
          password VARCHAR(140),
          phone_number VARCHAR(50));"
      )
      connection.exec(
        "CREATE TABLE properties(
          id SERIAL PRIMARY KEY,
          location VARCHAR(100),
          price_per_night MONEY,
          owner_id INTEGER REFERENCES users (id),
          name VARCHAR(60),
          description VARCHAR(240));"
      )
      connection.exec(
        "CREATE TABLE bookings(
          id SERIAL PRIMARY KEY,
          guest_id INTEGER REFERENCES users (id),
          property_id INTEGER REFERENCES properties (id),
          start_date DATE,
          end_date DATE,
          booking_status VARCHAR(60));"
      )
    end
  end
end

task :test_database_setup do
  p 'Cleaning test database...'

  connection = PG.connect(dbname: 'makersbnb_test')
  connection.exec('TRUNCATE users, properties, bookings;')
end

task :drop_databases do
  p 'Dropping databases...'

  connection = PG.connect(dbname: 'postgres')
  databases.each do |database|
    connection.exec("DROP DATABASE IF EXISTS #{database};")
  end
end

task :reset do
  Rake::Task[:drop_databases].execute
  Rake::Task[:setup].execute
end
